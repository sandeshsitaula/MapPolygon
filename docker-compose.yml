version: '3.3'

networks:
  mynetwork:
    driver: bridge


services:
  # PostgreSQL service
  database:
    image: postgis/postgis
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    container_name: postgres_container

  # Django service
  django:
    build:
      context: backend/.
      dockerfile: Dockerfile
    image: django_postgis_app
    privileged: true
    environment:
      - DEBUG=True
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_DB_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - OPENCAGE_API=10a9e27df30d48b9bf5ca88ad1f4ad44
    depends_on:
      - database
    ports:
      - "8000:8000"
      - "5037:5037"

    networks:
      - mynetwork
    volumes:
      - ./backend:/app  # Mount your project directory to the /app directory in the container
      - /dev/bus/usb:/dev/bus/usb
    container_name: django_container

  react_frontend:
    build:
      context: frontend/.
      dockerfile: Dockerfile
    image: react_frontend_app
    environment: 
      - REACT_APP_URL=http://django:8000/
    ports:
      - "3000:3000"
    networks: 
      - mynetwork
    volumes:
      - ./frontend:/app/frontend/
    depends_on:
      - django
    container_name: react_container


 # RabbitMQ service
  # # Redis service
  # rabbitmq:
  #   image: rabbitmq
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=rabbit
  #     - RABBITMQ_DEFAULT_PASS=rabbit
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   networks:
  #     - mynetwork
  #   container_name: rabbitmq_container
  #
  #


